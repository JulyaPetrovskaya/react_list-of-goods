{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","goods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZJ,SAAUJ,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZJ,SAAUJ,EAASW,UAdzB,EAkBEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBApBzB,EAwBEO,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KA3BlB,4CA+BE,WACE,IAAMQ,EA1DH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUE,EACZ,EADYA,WAENS,EAAY,YAAOD,GAczB,OAZIV,IAAaJ,EAASS,UACxBM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1Cd,IAAaJ,EAASW,QACxBI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvCd,GACFS,EAAaH,UAGRG,EAwCSM,CACZpB,EACAqB,KAAKnB,OAGP,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACED,KAAKnB,MAAMC,WAAaJ,EAASS,SAC7B,oBACA,6BAENgB,QAASH,KAAKf,mBAPhB,iCAYA,wBACEiB,KAAK,SACLD,UACED,KAAKnB,MAAMC,WAAaJ,EAASW,OAC7B,oBACA,6BAENc,QAASH,KAAKZ,aAPhB,4BAYA,wBACEc,KAAK,SACLD,WAC4B,IAA1BD,KAAKnB,MAAMG,WACP,oBACA,6BAENmB,QAASH,KAAKV,QAPhB,sBAY2B,IAA1BU,KAAKnB,MAAMG,YACTgB,KAAKnB,MAAMC,WAAaJ,EAASK,KAChC,KAEA,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKT,MAHhB,sBAUN,6BACGC,EAAMY,KAAI,SAAAC,GACT,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA7FtC,GAAyBC,IAAMC,WCnD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eaf4ef80.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.ALPHABET\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.LENGTH\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.isReversed === true\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {this.state.isReversed === false\n          && this.state.sortType === SortType.NONE\n            ? null\n            : (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {goods.map(good => {\n            return (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}